// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.0
//   protoc               v3.20.3
// source: proto/product.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "product";

export interface Product {
  id: number;
  name: string;
  description: string;
  price: number;
}

export interface CreateProductRequest {
  name: string;
  description: string;
  price: number;
}

export interface GetProductRequest {
  id: number;
}

export interface UpdateProductRequest {
  id: number;
  name: string;
  description: string;
  price: number;
}

export interface DeleteProductRequest {
  id: number;
}

export interface ProductResponse {
  product: Product | undefined;
}

export interface ProductsResponse {
  products: Product[];
}

export interface Empty {
}

export const PRODUCT_PACKAGE_NAME = "product";

export interface ProductsServiceClient {
  createProduct(request: CreateProductRequest): Observable<ProductResponse>;

  getProduct(request: GetProductRequest): Observable<ProductResponse>;

  listProducts(request: Empty): Observable<ProductsResponse>;

  updateProduct(request: UpdateProductRequest): Observable<ProductResponse>;

  deleteProduct(request: DeleteProductRequest): Observable<Empty>;
}

export interface ProductsServiceController {
  createProduct(
    request: CreateProductRequest,
  ): Promise<ProductResponse> | Observable<ProductResponse> | ProductResponse;

  getProduct(request: GetProductRequest): Promise<ProductResponse> | Observable<ProductResponse> | ProductResponse;

  listProducts(request: Empty): Promise<ProductsResponse> | Observable<ProductsResponse> | ProductsResponse;

  updateProduct(
    request: UpdateProductRequest,
  ): Promise<ProductResponse> | Observable<ProductResponse> | ProductResponse;

  deleteProduct(request: DeleteProductRequest): Promise<Empty> | Observable<Empty> | Empty;
}

export function ProductsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createProduct", "getProduct", "listProducts", "updateProduct", "deleteProduct"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProductsService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProductsService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PRODUCTS_SERVICE_NAME = "ProductsService";
